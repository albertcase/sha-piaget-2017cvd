'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

;(function () {

    var fetchApi = {
        'create': {
            'type': 'POST',
            'url': './domian/api/createPic'
        },
        'form': {
            'type': 'POST',
            'url': './domian/api/submit'
        }
    };

    var is_write = __base.getCookie('is_write') || 0,
        // 是否填写过表单
    shareSet_create; // 创建后的分享文案

    var storelist = {
        "北京": [{
            'name': 'PIAGET伯爵北京SKP专卖店',
            'address': '朝阳区建国路87号SKP商场一层D1066号铺',
            'tel': '<em><a href="tel:(010) 6533 1486">(010) 6533 1486</a><br><a href="tel:(010) 6530 7822">(010) 6530 7822</a></em>'
        }, {
            'name': 'PIAGET伯爵北京东方广场店',
            'address': '东城区东长安街1号北京东方广场东方新天地商场首层A201D号铺',
            'tel': '<em><a href="tel:(010) 8518 2332">(010) 8518 2332</a><br><a href="tel: (010) 8515 2606">(010) 8515 2606</a></em>'
        }],
        "辽宁省": [{
            'name': '大连远洋洲际大厦店',
            'address': '大连市中山区友好广场远洋洲际大厦B座6号',
            'tel': '<a href="tel:(0411) 8265 9797">(0411) 8265 9797</a>'
        }, {
            'name': 'PIAGET伯爵沈阳市府恒隆专卖店',
            'address': '沈河区青年大街1号市府恒隆广场一层L1-147铺位',
            'tel': '<em><a href="tel:(024) 3195 8068">(024) 3195 8068</a><br><a href="tel:(024) 3195 8078">(024) 3195 8078</a></em>'
        }],
        "天津": [{
            'name': '天津海信广场',
            'address': '和平区解放北路188号天津海信广场1层123号铺',
            'tel': '<em><a href="tel:(022) 2319 8088">(022) 2319 8088</a><br><a href="tel:(022) 2319 8180">(022) 2319 8180</a></em>'
        }],
        "上海": [{
            'name': 'PIAGET伯爵上海恒隆专卖店',
            'address': '静安区南京西路1266号恒隆广场102B',
            'tel': '<em><a href="tel:(021) 6288 1639">(021) 6288 1639</a><br><a href="tel:(021) 6288 2470">(021) 6288 2470</a></em>'
        }, {
            'name': 'PIAGET伯爵上海国金中心专卖店',
            'address': '浦东新区世纪大道8号国金中心商场L1-18-1',
            'tel': '<em><a href="tel:(021) 2028 1611">(021) 2028 1611</a><br><a href="tel:(021) 2028 1612">(021) 2028 1612</a></em>'
        }, {
            'name': 'PIAGET伯爵上海尚嘉中心专卖店',
            'address': '长宁区仙霞路99号第一层120单元',
            'tel': '<em><a href="tel:(021) 6070 1476">(021) 6070 1476</a><br><a href="tel:(021) 6070 1478">(021) 6070 1478</a></em>'
        }],
        "浙江省": [{
            'name': 'PIAGET伯爵杭州万象城专卖店',
            'address': '杭州市江干区四季青街道富春路701号杭州万象城一层165号商铺',
            'tel': '<em><a href="tel:(0571) 8970 5026">(0571) 8970 5026</a><br><a href="tel:(0571) 8970 5028">(0571) 8970 5028</a></em>'
        }],
        "江苏省": [{
            'name': '苏州泰华店',
            'address': '苏州市人民路383号苏州泰华商城一层110B号',
            'tel': '<a href="tel:(0512) 6572 5190">(0512) 6572 5190</a>'
        }, {
            'name': 'PIAGET伯爵南京德基专卖店',
            'address': '南京市中山路18号南京德基广场二期一层F120店铺',
            'tel': '<em><a href="tel:(025) 8677 7702">(025) 8677 7702</a><br><a href="tel:(025) 8677 7703">(025) 8677 7703</a></em>'
        }],
        "山东省": [{
            'name': '济南贵和购物中心店',
            'address': '济南市天地坛街1号1楼105铺',
            'tel': '<a href="tel:(0531) 8098 2276">(0531) 8098 2276</a>'
        }, {
            'name': '青岛海信广场奥运店',
            'address': '青岛市澳门路117号海信广场二期一楼1127-2店铺',
            'tel': '<a href="tel:(0532) 6678 8556">(0532) 6678 8556</a>'
        }],
        "陕西省": [{
            'name': '西安中大国际名品广场店',
            'address': '西安南大街30号中大国际名品广场A116店铺',
            'tel': '<a href="tel:(029) 8720 3027">(029) 8720 3027</a>'
        }],
        "河南省": [{
            'name': '郑州大卫城',
            'address': '郑州市二七路188号丹尼斯大卫城1F 伯爵专卖店',
            'tel': '<a href="tel:(0371) 89913772">(0371) 89913772</a>'
        }],
        "广东省": [{
            'name': 'PIAGET伯爵广州太古汇专卖店',
            'address': '广州市天河区天河路383号一楼L122号商铺',
            'tel': '<em><a href="tel:(020) 3868 2426">(020) 3868 2426</a><br><a href="tel:(020) 3868 2425">(020) 3868 2425</a></em>'
        }],
        "福建省": [{
            'name': '福州大洋店',
            'address': '福州市鼓楼区八一七北路268号福州大洋百货商场一楼',
            'tel': '<a href="tel:(0591) 8859 0808">(0591) 8859 0808</a>'
        }],
        "湖南省": [{
            'name': '长沙美美百货店',
            'address': '长沙市芙蓉中路一段478号长沙运达国际广场美美百货一层S105',
            'tel': '<a href="tel:(0731) 8477 9422">(0731) 8477 9422</a>'
        }],
        "广西省": [{
            'name': '南宁万象城店',
            'address': '南宁市青秀区民族大道136号一楼170铺',
            'tel': '<a href="tel:(0771) 5785 600">(0771) 5785 600</a>'
        }],
        "四川省": [{
            'name': 'PIAGET伯爵成都国际金融中心专卖店',
            'address': '成都市锦江区红星路三段一号成都国际金融中心商场L309号',
            'tel': '<em><a href="tel:(028) 6632 0620">(028) 6632 0620</a><br><a href="tel:(028) 6632 0621">(028) 6632 0621</a></em>'
        }]
    };

    var allimg = ['/build/dist/img/apply-btn.png', '/build/dist/img/attention-btn.png', '/build/dist/img/attention-text-1.png', '/build/dist/img/attention-text-2.png', '/build/dist/img/bg-foot.png', '/build/dist/img/bg-head.png', '/build/dist/img/close.png', '/build/dist/img/continue-btn.png', '/build/dist/img/create-bg.png', '/build/dist/img/create-btn.png', '/build/dist/img/create-success__text.png', '/build/dist/img/findStore-btn.png', '/build/dist/img/findStore-foot__text.png', '/build/dist/img/findStore-head__text.png', '/build/dist/img/findStore-local-btn.png', '/build/dist/img/findStore-rolling__text.png', '/build/dist/img/findStore-rolling__arr.png', '/build/dist/img/findStore-slogan.png', '/build/dist/img/form-back__text.png', '/build/dist/img/form-head__text.png', '/build/dist/img/form-next__text.png', '/build/dist/img/form-success__tips.png', '/build/dist/img/friend-btn.png', '/build/dist/img/hasJoin.png', '/build/dist/img/iknow-btn.png', '/build/dist/img/logo.png', '/build/dist/img/onlineStore-btn.png', '/build/dist/img/poster.jpg', '/build/dist/img/qrcode.png', '/build/dist/img/result-model.jpg', '/build/dist/img/slogan.png', '/build/dist/img/submit.png', '/build/dist/img/success-qrcode.png', '/build/dist/img/ta-btn.png', '/build/dist/img/ym-btn.png', '/build/dist/img/ym.mp4'];

    for (var i = 1; i <= 51; i++) {
        allimg.push('/build/dist/img/ani/' + i + '.jpg');
    }

    /* 
     * select
     */

    var _select = function () {
        function _select() {
            _classCallCheck(this, _select);

            this.storelist = storelist;
            this.returnLiHtml = [];
        }

        _createClass(_select, [{
            key: 'init',
            value: function init(value) {
                var city = document.querySelector('.city'),
                    cityInput = city.querySelector('input'),
                    cityListNode = city.querySelector('.store-list__con ul');

                cityInput.value = value;
                cityListNode.innerHTML = __select.liHtml(value);
                __base.overscroll(document.querySelector(".store-list__scroll")); // 重置滚动条

            }
        }, {
            key: 'liHtml',
            value: function liHtml(value) {
                var _storeList = this.storelist;
                this.returnLiHtml = [];
                for (var key in _storeList) {
                    if (key === value) {
                        for (var _value in _storeList[key]) {
                            this.returnLiHtml.push('\n\t\t\t\t\t<li>\n                        <p>' + _storeList[key][_value]['name'] + '</p>\n                        <span>\n                            ' + _storeList[key][_value]['address'] + '\n                        </span>\n                        <span>\u7535\u8BDD\uFF1A' + _storeList[key][_value]['tel'] + '</span>\n                    </li>\n\t\t  \t\t');
                        }
                    };
                }
                return this.returnLiHtml.join('');
            }
        }]);

        return _select;
    }();

    var __select = new _select();

    /* 
     * form
     */

    function _form() {

        this.init = function () {
            this.setSelect('own-select__input');
            this.setSelect('ta-select__input');
        };
        this.setSelect = function (_class) {
            var _input = document.querySelector('.' + _class);
            var _select = document.getElementsByName(_class)[0];

            _select.addEventListener('change', function () {
                _input.value = this.value;
            });
        };
        this.check = function () {
            var taTitle = document.getElementsByName('ta-title__input')[0].value,
                taName = document.getElementsByName('ta-name')[0].value,
                taTel = document.getElementsByName('ta-tel')[0].value,
                taAddress = document.getElementsByName('ta-address')[0].value,
                ownTitle = document.getElementsByName('own-title')[0].value,
                ownName = document.getElementsByName('own-name')[0].value,
                ownTel = document.getElementsByName('own-tel')[0].value,
                ownEmail = document.getElementsByName('own-email')[0].value,
                pack = document.getElementsByName('pack')[0].checked,


            // submitData = {
            // 	'taTitle': taTitle,
            // 	'taName': taName,
            // 	'taTel': taTel,
            // 	'taAddress': taAddress,

            // 	'ownTitle': ownTitle,
            // 	'ownName': ownName,
            // 	'ownTel': ownTel,
            // 	'ownEmail': ownEmail
            // }

            submitData = 'taTitle=' + taTitle + '&taName=' + taName + '&taTel=' + taTel + '&taAddress=' + taAddress + '&ownTitle=' + ownTitle + '&ownName=' + ownName + '&ownTel=' + ownTel + '&ownEmail=' + ownEmail;

            if (taTitle == "" || taTitle == '称谓') {
                __base.formErrorTips('请选择TA的称谓!');
            } else if (taName == "") {
                __base.formErrorTips('TA的姓名不能为空!');
            } else if (!__base.isPhoneNum(taTel)) {
                __base.formErrorTips('TA的电话号码填写有误!');
            } else if (taAddress == "") {
                __base.formErrorTips('地址不能为空!');
            } else if (ownTitle == "" || ownTitle == '称谓') {
                __base.formErrorTips('请选择您的称谓!');
            } else if (ownName == "") {
                __base.formErrorTips('您的姓名不能为空!');
            } else if (!__base.isPhoneNum(ownTel)) {
                __base.formErrorTips('您的电话号码填写有误!');
            } else if (!__base.isEmail(ownEmail)) {
                __base.formErrorTips('邮件地址有误!');
            } else if (!pack) {
                __base.formErrorTips('请阅读并接受活动相关条款与细则!');
            } else {
                var loading = document.querySelector('.loading');
                loading.style.display = 'block';

                this.create_submit(fetchApi['form']['type'], fetchApi['form']['url'], submitData, 'form');
                console.log(submitData);
            }
        };

        this.createCheck = function () {
            var toName = document.querySelector('.to-name input').value,
                toMsg = document.querySelector('.msg-content textarea').value,
                fromName = document.querySelector('.from-name input').value;

            toMsg = __defaultSet.strSplice(toMsg, 15);
            // alert(toMsg);
            if (toName == "") {
                __base.formErrorTips('亲爱的TA选项不能为空!');
            } else if (toMsg == "") {
                __base.formErrorTips('请输入您对TA爱的告白!');
            } else if (fromName == "") {
                __base.formErrorTips('您的署名不能为空!');
            } else {
                var loading = document.querySelector('.loading');
                loading.style.display = 'block';
                //    		var createSubmitData = {
                //     		'toName': toName,
                // 'toMsg': toMsg.replace(/\n/g,","),
                // 'fromName': fromName,
                // 'fs': '12', 
                // 'color': '116, 112, 114',
                // 'isCenter': 1
                //     	}

                var createSubmitData = 'toName=' + toName + '&toMsg=' + toMsg.replace(/\n/g, ",") + '&fromName=' + fromName + '&fs=12&color=116, 112, 114&isCenter=1';

                this.create_submit(fetchApi['create']['type'], fetchApi['create']['url'], createSubmitData, 'create');

                // console.log(createSubmitData);

            }
        };

        this.create_submit = function (type, url, data, el) {
            // 接口结果处理
            __base.ajaxFun(type, url, data, function (result) {
                __base.formErrorTips(result.msg);
                var loading = document.querySelector('.loading');
                loading.style.display = 'none';

                if (el === 'create') {
                    if (result.status == 1) {
                        shareSet_create = {
                            "_title": '因为你，所以爱', //分享标题
                            "_desc": "大胆向TA告白，为TA获取来自伯爵的惊喜！", // 分享朋友圈的描述
                            "_desc_friend": "大胆向TA告白，为TA获取来自伯爵的惊喜！", // 分享好友的描述
                            "_link": result['work_url'], //分享的连接
                            "_imgUrl": window.location.origin + "/build/dist/img/share.jpg", //分享的图片
                            "_shareAppMessageCallback": function _shareAppMessageCallback() {},
                            "_shareTimelineCallback": function _shareTimelineCallback() {}
                        };

                        __base.sectionChange("works");

                        var createSuccessTips = document.getElementById('create-success__tips');
                        createSuccessTips.className = 'popup';

                        // 存储是否提交过表单cookie
                        is_write = result['is_write'];
                        __base.setCookie('is_write', result['is_write']);

                        document.getElementById('zuopin').innerHTML = '<img src="' + result['work_img__url'] + '" width="100%" />';

                        __base.wxshareFun(shareSet_create);

                        __defaultSet.isJoin(is_write);
                    }
                } else {

                    if (result.status == 1) {
                        __base.baseInit();
                        __base.sectionChange("success");
                    }
                }

                // console.log(result);
            });
        };
    }

    var __form = new _form();

    /* 
     * defaultSet
     */

    var defaultSet = function () {
        function defaultSet(aniEle) {
            _classCallCheck(this, defaultSet);

            this.aniEle = aniEle;
        }

        _createClass(defaultSet, [{
            key: 'videoFun',
            value: function videoFun() {
                var video = document.getElementById('video'),
                    poster = document.querySelector('.poster');

                __base.eventTester(video, "ended", function () {
                    poster.style.visibility = 'visible';
                    video.style.height = '0';
                });

                __base.eventTester(video, "pause", function () {
                    poster.style.visibility = 'visible';
                    video.style.height = '0';
                });

                poster.addEventListener('touchstart', function (e) {
                    var self = this;
                    video.style.height = '100%';
                    video.play();
                    setTimeout(function () {
                        self.style.visibility = 'hidden';
                    }, 300);
                });
            }
        }, {
            key: 'init',
            value: function init() {

                var hashPage = __base.getQueryString('page');
                if (hashPage != 'form') {
                    this.startAni();
                }
                this.popupClose();
                this.videoFun();
                this.isJoin(is_write);
            }
        }, {
            key: 'isJoin',
            value: function isJoin(num) {
                var formSuccess__tips = document.querySelector('.form-success__tips');
                if (num) {
                    formSuccess__tips.innerHTML = '<img src="/build/dist/img/hasJoin.png" width="100%" />';
                } else {
                    formSuccess__tips.innerHTML = '<img src="/build/dist/img/form-success__tips.png" width="100%" />';
                }
            }
        }, {
            key: 'popup',
            value: function popup(ele) {
                var items = document.querySelectorAll('popup');
                for (var _i = 0; _i < items.length; _i++) {
                    var item = items[_i];
                    item.className = 'popup transition hidden';
                }
                document.getElementById(ele).className = 'popup';
            }
        }, {
            key: 'popupClose',
            value: function popupClose() {
                var items = document.querySelectorAll('.close');
                for (var _i2 = 0; _i2 < items.length; _i2++) {
                    var item = items[_i2];
                    item.onclick = function (e) {
                        var parentNode = this.parentNode.id;
                        document.getElementById(parentNode).className = 'popup transition hidden';
                    };
                }
            }
        }, {
            key: 'startAni',
            value: function startAni() {
                var startTime = Date.now(),
                    cycle = 90;
                var ani = document.getElementById(this.aniEle),
                    imgArray = [];

                ani.className = '';

                function aniUpdate() {
                    var currentTime = Date.now();
                    var p = 1 + Math.floor((currentTime - startTime) / 90);
                    if (imgArray.indexOf(p) < 0) {
                        // console.log(p);
                        imgArray.push(p);
                        ani.style.background = "url('/build/dist/img/ani/" + p + ".jpg') center no-repeat";
                        ani.style.backgroundSize = "100% 100%";
                    }

                    if (p < 51) {
                        requestAnimationFrame(aniUpdate);
                    } else {
                        console.log('animate end');
                        __base.sectionChange("index");
                        __base.elFadeOut(ani, function () {
                            ani.className = 'transition hidden';
                        });
                    }
                }
                requestAnimationFrame(aniUpdate);
            }
        }, {
            key: 'strSplice',
            value: function strSplice(str, num) {
                // 字符拼接
                var strSplit = str.split('\n');
                console.log(strSplit);
                var finStr = '';
                for (var _i3 = 0; _i3 < strSplit.length; _i3++) {
                    if (strSplit[_i3].length < num) {
                        finStr += strSplit[_i3] + '\n';
                    } else {
                        finStr += this.strOverFun(strSplit[_i3], num);
                    }
                }

                // console.log(finStr);
                //node.value = finStr;
                return finStr;
            }
        }, {
            key: 'strOverFun',
            value: function strOverFun(str, num) {
                // 字符超出截取
                var arr = '';
                for (var _i4 = 0, len = str.length / num; _i4 < len; _i4++) {
                    var str1 = str.substr(0, num);
                    str = str.replace(str1, '');
                    arr += str1 + '\n';
                }
                return arr;
            }
        }]);

        return defaultSet;
    }();

    var __defaultSet = new defaultSet('animate');

    /* 
     * DOMContentLoaded
     */
    window.addEventListener("DOMContentLoaded", function () {

        __base.loadingFnDoing(allimg, function () {
            var loading = document.querySelector('.loading');
            loading.style.display = 'none';

            //loading.remove();


            function abc(u, num) {
                var value = u.value,
                    allLine = value.split('\n'),
                    lastLine = allLine.pop();
                if (lastLine.length >= num) {
                    lastLine = lastLine.substr(0, num) + '\n' + lastLine.substr(num);
                    allLine.push(lastLine);
                    u.value = allLine.join('\n');
                }
            }

            var isLock = false; //是否锁定当前的输入状态  
            //输入即可触发【不区分中文和英文】  
            document.querySelector('.msg-content textarea').addEventListener('input', function () {
                //只有在非中文输入状态的时候，才能更改数字  
                if (!isLock) {
                    var _str = this.value;
                    abc(this, 15);
                    // __defaultSet.strSplice(this, _str, 15);
                }
            });
            //中文输入开始的时候，会触发此函数  
            document.querySelector('.msg-content textarea').addEventListener('compositionstart', function () {
                isLock = true; //此时在输入中，加锁  
            });
            //中文输入结束的时候，会触发此方法  
            document.querySelector('.msg-content textarea').addEventListener('compositionend', function () {
                var _str = this.value;
                // __defaultSet.strSplice(this, _str, 10);
                abc(this, 15);
                isLock = false;
            });

            // document.querySelector('.msg-content textarea').onkeydown = function(e){
            //     if(this.value.length > 45 && ((e.keyCode || e.which) != 8))return false;
            // }

            // 创建换行
            // document.querySelector('.msg-content textarea').onkeypress = function (e) {
            //    var value = this.value,
            //        allLine = value.split('\n'),
            //        lastLine = allLine.pop();
            //     if (lastLine.length >= 15) {
            //          lastLine = lastLine.substr(0, 15) + '\n' + lastLine.substr(15);
            //          allLine.push(lastLine);

            //          this.value = allLine.join('\n');			     
            //              } 

            //              // 3行输入限定
            //              if (!e) e = window.event;  
            //              if ((e.keyCode || e.which) == 13) {  
            //                  if(allLine.length > 1) return false;  
            //              }  
            // };

            // 创建页面提交
            document.querySelector('.create-btn').onclick = function () {
                __form.createCheck();
            };

            // 店铺列表查询
            var citySelect = document.querySelector('.city select');
            citySelect.addEventListener('change', function () {
                __select.init(this.value);
            });

            var formSubmit = document.querySelector('.formSubmit');
            formSubmit.addEventListener('click', function () {
                __form.check();
            });

            // 获取伯爵玫瑰
            var applyBtn = document.querySelector('.apply-btn');
            applyBtn.onclick = function () {
                var dreambox = document.getElementById('dreambox');
                dreambox.className = '';

                if (is_write) {
                    __base.sectionChange('success');
                } else {
                    __base.sectionChange('form');
                }
            };

            // 活动详情
            document.querySelector('.foot-rule__info').onclick = function () {
                __defaultSet.popup('rule-pop');
                video.pause();
                __base.overscroll(document.querySelector("#rule-pop .p-model-con"));
            };

            // 活动条款
            document.querySelector('.pack-link').onclick = function () {
                __defaultSet.popup('term-pop');
                __base.overscroll(document.querySelector("#term-pop .p-model-con"));
            };

            // 创建完成点击继续按钮
            document.querySelector('.continue-btn').onclick = function () {
                var createSuccessTips = document.getElementById('create-success__tips');
                createSuccessTips.className = 'popup transition hidden';

                __base.wxshareFun(shareSet_create);
            };

            // 下拉城市
            __select.init('北京');

            // 表单
            __form.init(); // 设置表单称谓选项

            // 分享默认设置
            __base.baseInit();
        });
    }, false);

    /* 
     * load
     */
    window.addEventListener("load", function () {
        __defaultSet.init();
        var hashPage = __base.getQueryString('page');

        if (hashPage == 'form') {
            if (is_write) {
                __base.sectionChange('success');
            } else {
                __base.sectionChange('form');
            }

            var ani = document.getElementById('animate');
            ani.className = 'transition hidden';
        }

        var rolling = document.getElementById('rolling');
        __base.overscroll(rolling);

        rolling.addEventListener("scroll", function (e) {
            var rollingOffsetTop = document.querySelector('#rolling').offsetHeight;
            var rolling_conOffsetTop = document.querySelector('#rolling .rolling_con').offsetHeight;
            var scrollHeight = rolling_conOffsetTop - rollingOffsetTop,
                currentScrollHeight = this.scrollTop;

            var rollingArr = document.querySelector('.rolling_con__arr');
            if (currentScrollHeight >= scrollHeight) {
                rollingArr.style.visibility = 'hidden';
            } else {
                rollingArr.style.visibility = 'visible';
            }
            // console.log(this.scrollTop);
        });
    }, false);
})();